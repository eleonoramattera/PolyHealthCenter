package PolyHealthCenter.runner;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

import com.opencsv.CSVReader;
import java.io.FileReader;
import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.stereotype.Component;

import com.opencsv.CSVReader;

import PolyHealthCenter.model.Sede;
import PolyHealthCenter.repository.SedeDAORepository;
import com.opencsv.exceptions.CsvValidationException;

@Component
public class SedeRunner implements ApplicationRunner {
	@Autowired SedeDAORepository repo;

	@Override
	public void run(ApplicationArguments args) throws Exception {
		System.out.println("sedi runner..");
		
		if (repo.findAll().isEmpty()) {

			//setSedi();
	esempio();
	}
	}
	
//	public void setSedi() throws IOException, CsvValidationException {
//
//		try (CSVReader reader = new CSVReader(new FileReader(
//				"C:\\Users\\Micro\\Desktop\\csvjson.csv"))) {
//			String[] lineInArray;
//			while ((lineInArray = reader.readNext()) != null) {
//				String[] parts = lineInArray[0].split(";");
//				String part1 = parts[0];
//				String part2 = parts[1];
//				String part3= parts[2];
//				
//			
//
//				Sede s = new Sede(part1, part2, part3);
//				repo.save(s);
//			}
//		}
//	}

	
	

	    public void esempio () throws CsvValidationException {
	        String csvFile = "C:\\Users\\Micro\\Desktop\\csvjson.csv"; // Sostituisci con il percorso del tuo file CSV
	        List<Sede> sedi = new ArrayList<>();

	        try (Scanner scanner = new Scanner(new File(csvFile))) {
	            while (scanner.hasNextLine()) {
	                String line = scanner.nextLine();
	                String[] parts = line.split(",", 3); // Dividi la riga solo fino a 4 elementi

	                if (parts.length == 3) {
	                    int[] coordinates = new int[2];
	                    coordinates[0] = Integer.parseInt(parts[0]);
	                    coordinates[1] = Integer.parseInt(parts[1]);

	                    Sede s = new Sede();
	                    s.setCoordinates(coordinates);
	                    s.setComune(parts[2]);
	                    s.setRegione(parts[3]);

	                    sedi.add(s);
	                } else {
	                    System.out.println("Riga non valida: " + line);
	                }
	            }
	        } catch (FileNotFoundException e) {
	            e.printStackTrace();
	        }

	      

	      

	    }
	

	
	 

	
	
}