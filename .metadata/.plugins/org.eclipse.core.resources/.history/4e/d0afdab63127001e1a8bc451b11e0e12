package PolyHealthCenter.model;


import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

import PolyHealthCenter.security.entity.User;
import jakarta.persistence.*;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToOne;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@NoArgsConstructor
@Data
@Builder
@Entity
@Table(name = "prenotazioni")
public class Prenotazione {
	

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	
//	@OneToOne
//	private Terapia terapia;
//
//
//	@ManyToOne
//	private Sede sede;
  
	private String nomeTerapia;
	private String sede;
	private String nomeUtente;
	private String cognomeUtente;
	private String emailUtente;
	
	@Column(name="data_prenotazione")
	//@JsonFormat(pattern="yyyy-MM-dd")	@JsonFormat(pattern="yyyy-MM-dd HH:mm")
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm")
	private LocalDate dataPrenotazione;


	public Prenotazione(String nomeTerapia, String sede, String nomeUtente, String cognomeUtente, String  emailUtente,
			LocalDate dataPrenotazione) {
		super();
		this.nomeTerapia = nomeTerapia;
		this.sede = sede;
		this.nomeUtente = nomeUtente;
		this.cognomeUtente = cognomeUtente;
		this.emailUtente =  emailUtente;
		this.dataPrenotazione = dataPrenotazione;
	}
		

	
	
//	@ManyToOne
//	@JoinTable(name = "prenotazione_utente",
//     joinColumns = @JoinColumn(name = "id_prenotazione"),
//	  inverseJoinColumns = @JoinColumn(name = "id_utente"))
//	private Utente utente;
	
//	@JsonIgnore
//	@ManyToMany
//	@JoinTable(name = "prenotazione_utente",
//	           joinColumns = @JoinColumn(name = "id_prenotazione"),
//			  inverseJoinColumns = @JoinColumn(name = "id_utente"))
//	private List<Utente> utente;
//	
//	public Prenotazione( Terapia terapia, LocalDate dataPrenotazione, Sede sede) {
//		super();
//
//		this.terapia = terapia;
//		this.dataPrenotazione = dataPrenotazione;
//		this.sede = sede;
//	}

	
}
