package PolyHealthCenter.model;


import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

import PolyHealthCenter.security.entity.User;
import jakarta.persistence.*;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToOne;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@NoArgsConstructor

@Builder
@Entity
@Table(name = "prenotazioni")
public class Prenotazione {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	@Column(unique = true, nullable = false)
	private Long numeroPrenotazione;
	
	@OneToOne
	private Terapia terapia;


	@ManyToOne
	private Sede sede;

	
	@Column(name="data_prenotazione")
	@JsonFormat(pattern="dd-MM-yyyy")
	private LocalDate dataPrenotazione;
	
	@ManyToOne
	 private User user;

	public Prenotazione(Terapia terapia, Sede sede, LocalDate dataPrenotazione, User user) {
		super();
		this.terapia = terapia;
		this.sede = sede;
		this.dataPrenotazione = dataPrenotazione;
		this.user = user;
	}

	public void setUser(User findByEmail) {
		// TODO Auto-generated method stub
		
	}


	
	
//	@ManyToOne
//	@JoinTable(name = "prenotazione_utente",
//     joinColumns = @JoinColumn(name = "id_prenotazione"),
//	  inverseJoinColumns = @JoinColumn(name = "id_utente"))
//	private Utente utente;
	
//	@JsonIgnore
//	@ManyToMany
//	@JoinTable(name = "prenotazione_utente",
//	           joinColumns = @JoinColumn(name = "id_prenotazione"),
//			  inverseJoinColumns = @JoinColumn(name = "id_utente"))
//	private List<Utente> utente;
//	
//	public Prenotazione( Terapia terapia, LocalDate dataPrenotazione, Sede sede) {
//		super();
//
//		this.terapia = terapia;
//		this.dataPrenotazione = dataPrenotazione;
//		this.sede = sede;
//	}

	
}
